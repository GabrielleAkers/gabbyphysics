interface WasmInstance extends WebAssembly.Instance {
  exports: {
    add(a: number, b: number): number;
  };
}

(async () => {
  const wasm_module = await WebAssembly.compileStreaming(fetch("out/main.wasm"));
  const memory = new WebAssembly.Memory({ initial: 2 });
  const env = { memory };
  const wasm = await WebAssembly.instantiate(wasm_module, { env }) as WasmInstance;


  const container = document.getElementById("container");
  if (!container) throw new Error("no container found");
  container.style.alignItems = "center";
  const num1 = document.createElement("input");
  const num2 = document.createElement("input");
  num1.type = "number";
  num2.type = "number";
  const output = document.createElement("p");
  output.innerText = "0";
  output.style.color = "white";
  const add_btn = document.createElement("button");
  add_btn.innerText = "Add";
  add_btn.onclick = () => {
    const v = wasm.exports.add(num1.valueAsNumber, num2.valueAsNumber);
    output.innerText = v.toString();
  };
  container.appendChild(num1);
  container.appendChild(num2);
  container.appendChild(output);
  container.appendChild(add_btn);
})();
